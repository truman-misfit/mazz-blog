# This is the main configuration file for the application.
# ~~~~~

# Secret key
# ~~~~~
# The secret key is used to secure cryptographics functions.
#
# This must be changed for production, but we recommend not changing it in this file.
#
# See http://www.playframework.com/documentation/latest/ApplicationSecret for more details.
play.crypto.secret = "changeme"

# The application languages
# ~~~~~
play.i18n.langs = [ "en" ]

# Router
# ~~~~~
# Define the Router object to use for this application.
# This router will be looked up first when the application is starting up,
# so make sure this is the entry point.
# Furthermore, it's assumed your route file is named properly.
# So for an application router like `my.application.Router`,
# you may need to define a router file `conf/my.application.routes`.
# Default to Routes in the root package (and conf/routes)
# play.http.router = my.application.Routes

# Database configuration
# ~~~~~
# You can declare as many datasources as you want.
# By convention, the default datasource is named `default`
#
# db.default.driver=org.h2.Driver
# db.default.url="jdbc:h2:mem:play"
# db.default.username=sa
# db.default.password=""

# Evolutions
# ~~~~~
# You can disable evolutions if needed
# play.evolutions.enabled=false

# You can disable evolutions for a specific datasource if necessary
# play.evolutions.db.default.enabled=false

# The blogs
blogs {

  # A blog with name default.  The name can be anything, it is only used internally.
  default {

    # The path of the blog.  This should not end in a slash.  This path will be relative to the path that the blogs
    # router is deployed to.
    path = "/blog"

    # The order that the blog is routed.  Important if you have blogs that are nested in other blogs paths.
    # Defaults to 10.
    # order = 10

    # The git configuration
    gitConfig {

      # The repo must be a repo on the filesystem that has been cloned from somewhere.
      gitRepo = "."

      # The path within the repo to serve the blog from.  Optional.
      path = "mazz-blog/app/"

      # The branch to read the blog from.  Defaults to published.
      branch = "master"

      # The name of the remote to fetch from.  If not specified, no fetch will be done when updating.
      # remote = "origin"

      # The fetch key.  Used to authenticate commit hooks from a remote git repository such as GitHub.
      # If not specified, remote triggering of fetching is disabled.
      # fetchKey = "somesecret"

      # The update interval.  If specified, the blog will be fetched (if a remote is configured) and reindexed at this
      # interval.  Reindexing is only done if the blog has actually changed.
      updateInterval = 10 minutes
    }
  }
}
